import sqlite3
import random
from responses import join_responses, pidor_responses, krasavchik_responses
from datetime import datetime

DB_NAME = "chat_family.db"


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ —Ñ—Ä–∞–∑
def get_random_phrase(phrases_list, username, telegram_id):
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ñ—Ä–∞–∑—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è {name} –∏–ª–∏ {tg}
    if username or telegram_id:  # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –∏–º—è –∏–ª–∏ —Ç–µ–≥
        matching_phrases = [phrase for phrase in phrases_list if '{name}' in phrase or '{tg}' in phrase]
    else:  # –ï—Å–ª–∏ –Ω–µ—Ç –∏–º–µ–Ω–∏ –∏ —Ç–µ–≥–∞, –≤—ã–±–∏—Ä–∞–µ–º —Ñ—Ä–∞–∑—ã –±–µ–∑ –Ω–∏—Ö
        matching_phrases = [phrase for phrase in phrases_list if '{name}' not in phrase and '{tg}' not in phrase]

    if not matching_phrases:
        return "–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ñ—Ä–∞–∑–∞."

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É
    chosen_phrase = random.choice(matching_phrases)

    # –ï—Å–ª–∏ –≤ —Ñ—Ä–∞–∑–µ –µ—Å—Ç—å —à–∞–±–ª–æ–Ω {name}, –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ –Ω–∞ –∏–º—è
    if '{name}' in chosen_phrase:
        chosen_phrase = chosen_phrase.replace('{name}', username)

    # –ï—Å–ª–∏ –≤ —Ñ—Ä–∞–∑–µ –µ—Å—Ç—å —à–∞–±–ª–æ–Ω {tg}, –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ –Ω–∞ —Ç–µ–≥
    if '{tg}' in chosen_phrase:
        chosen_phrase = chosen_phrase.replace('{tg}', '@' + telegram_id)

    return chosen_phrase


def initialize_db():
    with sqlite3.connect(DB_NAME) as conn:
        c = conn.cursor()
        c.execute("""
        CREATE TABLE IF NOT EXISTS participants (
            user_id INTEGER PRIMARY KEY,
            username TEXT,
            first_name TEXT,
            last_name TEXT,
            full_name TEXT,
            language_code TEXT,
            chat_id INTEGER
        )
        """)
        c.execute("""
        CREATE TABLE IF NOT EXISTS winners (
            date TEXT PRIMARY KEY,
            pidor_id INTEGER,
            krasavchik_id INTEGER
        )
        """)
        conn.commit()


def join_raffle(user_id, username, first_name, last_name, full_name, language_code, chat_id):
    with sqlite3.connect(DB_NAME) as conn:
        c = conn.cursor()
        c.execute("SELECT * FROM participants WHERE user_id = ? AND chat_id = ?", (user_id, chat_id))
        if c.fetchone():
            return "–¢—ã –µ–±–∞–Ω—É—Ç—ã–π?\n–ß—Ç–æ —Ç—ã —Ç—É—Ç —Ç—ã–∫–∞–µ—à—å??"

        c.execute("""
            INSERT INTO participants (user_id, username, first_name, last_name, full_name, language_code, chat_id)
            VALUES (?, ?, ?, ?, ?, ?, ?)
        """, (user_id, username, first_name, last_name, full_name, language_code, chat_id))
        conn.commit()
        return get_random_phrase(phrases_list=join_responses, username=first_name, telegram_id=username)


def choose_pidor():
    today = datetime.now().date().isoformat()

    with sqlite3.connect(DB_NAME) as conn:
        c = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –≤—ã–±—Ä–∞–Ω –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –ü–∏–¥–æ—Ä –¥–Ω—è
        c.execute("SELECT * FROM winners WHERE date = ?", (today,))
        row = c.fetchone()

        if row and row[1]:  # –ï—Å–ª–∏ –ü–∏–¥–æ—Ä –¥–Ω—è —É–∂–µ –µ—Å—Ç—å
            c.execute("SELECT username, first_name FROM participants WHERE user_id = ?", (row[1],))
            user_data = c.fetchone()
            return get_random_phrase(phrases_list=pidor_responses, telegram_id=user_data[0], username=user_data[1])

        # –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π, –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        c.execute("SELECT user_id, username, first_name FROM participants")
        users = c.fetchall()

        if not users:
            return "–û–¥–Ω–∏ —Å—ã–∫—É–Ω—ã –ø–æ—Ö–æ–∂–µ üò¢ ..."

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        pidor_data = random.choice(users)
        pidor_id, pidor_username, pidor_first_name = pidor_data

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–∞–∑—É, –∫—Ç–æ —Å—Ç–∞–ª –ü–∏–¥–æ—Ä–æ–º –¥–Ω—è
        c.execute("INSERT OR REPLACE INTO winners (date, pidor_id) VALUES (?, ?)", (today, pidor_id))

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É —Å –∏–º–µ–Ω–µ–º –∏ –Ω–∏–∫–Ω–µ–π–º–æ–º
        return get_random_phrase(phrases_list=pidor_responses, telegram_id=pidor_username, username=pidor_first_name)


def choose_krasavchik():
    today = datetime.now().date().isoformat()
    with sqlite3.connect(DB_NAME) as conn:
        c = conn.cursor()
        c.execute("SELECT * FROM winners WHERE date = ?", (today,))
        row = c.fetchone()
        if row and row[2]:
            c.execute("SELECT username FROM participants WHERE user_id = ?", (row[2],))
            return c.fetchone()[0]
        c.execute("SELECT user_id FROM participants")
        users = [r[0] for r in c.fetchall()]
        if not users:
            return "–æ–¥–Ω–∏ —Å—ã–∫—É–Ω—ã –ø–æ—Ö–æ–∂–µ üò¢ ..."
        pidor_id = row[1] if row else None
        filtered = [u for u in users if u != pidor_id]
        if not filtered:
            return "–•–≤–∞—Ç–∏—Ç —Å —Ç–µ–±—è —á–∏–Ω–æ–≤ PI-–¥–æ—Ä –∫–æ–º–Ω–∞—Ç–Ω—ã–π"
        krasavchik_id = random.choice(filtered)
        if row:
            c.execute("UPDATE winners SET krasavchik_id = ? WHERE date = ?", (krasavchik_id, today))
        else:
            c.execute("INSERT INTO winners (date, krasavchik_id) VALUES (?, ?)", (today, krasavchik_id))
        c.execute("SELECT username FROM participants WHERE user_id = ?", (krasavchik_id,))
        return get_random_phrase(phrases_list=krasavchik_responses, username='', telegram_id=c.fetchone()[0])
